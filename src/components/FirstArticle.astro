---
const {article} = Astro.props
import AuthorInfo from "./AuthorInfo.astro";
import { getAuthorById } from "../lib/api";
import { dateFormatter } from "../lib/utils/dateFormatter";
import { Image } from "astro:assets";
const author = await getAuthorById(article.created_by_id)
const published = dateFormatter(article.published_at)
---

<main>
    <section class="flex gap-4">
        <a href=`/${article.type}` title={article.type} id="article-type">{article.type.toUpperCase()}</a>
        <a id="title" href=`/${article.type}/${article.slug}` title={article.title}>{article.title}</a>
        <p class=" text-base mb-4">{article.body.substring(0, 100)} ...</p>
        <div>
        <a href=`/${article.type}/${article.slug}`  class="animated-button">
            <svg xmlns="http://www.w3.org/2000/svg" class="arr-2" viewBox="0 0 24 24">
              <path
                d="M16.1716 10.9999L10.8076 5.63589L12.2218 4.22168L20 11.9999L12.2218 19.778L10.8076 18.3638L16.1716 12.9999H4V10.9999H16.1716Z"
              ></path>
            </svg>
            <span class="text">Leer MÃ¡s</span>
            <span class="circle"></span>
            <svg xmlns="http://www.w3.org/2000/svg" class="arr-1" viewBox="0 0 24 24">
              <path
                d="M16.1716 10.9999L10.8076 5.63589L12.2218 4.22168L20 11.9999L12.2218 19.778L10.8076 18.3638L16.1716 12.9999H4V10.9999H16.1716Z"
              ></path>
            </svg>
          </a>
        <AuthorInfo author={author} published={published}/>
    </div>
    </section>
    <a href=`/${article.type}/${article.slug}` title={article.title}>
      <Image width={700} height={300} src={article.img} alt={article.img_alternate}/>
    </a>
</main>

<style>
    main{
        display: flex;
        margin-bottom: 3rem;
        margin-top: 1.5rem;
        gap: 2rem;
    }
    @media screen and (max-width: 1000px) {
        main {
            display: flex;
            flex-direction: column; /* Cambia a 2 columnas cuando el ancho de la pantalla sea menor o igual a 768px */
        }
    }
    section{
        display: flex;
        flex-direction: column;
    }
    #title{
        font-size: 2rem;
        font-weight: bold;
        color: #FECF02;
    }

  a:hover{
    text-decoration: underline;
  }
    #article-type{
        color: #6ADFCD;
    }
    div{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    .animated-button {
  position: relative;
  display: flex;
  align-items: center;
  gap: 4px;
  padding: 16px 36px;
  border: 4px solid;
  border-color: transparent;
  font-size: 16px;
  background-color: ;
  border-radius: 100px;
  font-weight: 600;
  color: aliceblue;
  box-shadow: 0 0 0 2px #ffffff;
  cursor: pointer;
  overflow: hidden;
  transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
}

.animated-button svg {
  position: absolute;
  width: 24px;
  fill: aliceblue;
  z-index: 9;
  transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
}

.animated-button .arr-1 {
  right: 16px;
}

.animated-button .arr-2 {
  left: -25%;
}

.animated-button .circle {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 20px;
  height: 20px;
  background-color: #c5e5e4;
  border-radius: 50%;
  opacity: 0;
  transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
}

.animated-button .text {
  position: relative;
  z-index: 1;
  transform: translateX(-12px);
  transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
}

.animated-button:hover {
  box-shadow: 0 0 0 12px transparent;
  color: #212121;
  border-radius: 12px;
}

.animated-button:hover .arr-1 {
  right: -25%;
}

.animated-button:hover .arr-2 {
  left: 16px;
}

.animated-button:hover .text {
  transform: translateX(12px);
}

.animated-button:hover svg {
  fill: #1f387e;
}

.animated-button:active {
  scale: 0.95;
  box-shadow: 0 0 0 4px #6ADFCD;
}

.animated-button:hover .circle {
  width: 220px;
  height: 220px;
  opacity: 1;
}

</style>